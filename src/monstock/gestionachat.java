/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package monstock;

import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author YASSOU
 */
public class gestionachat extends javax.swing.JFrame {

     Statement stm,stm1;
    connexion maconx =new connexion();
    DefaultTableModel model;
    int selectedrow;
    /**
     * Creates new form gestionachat
     */
    public gestionachat() {
        initComponents();
         this.setLocationRelativeTo(null);
        setResizable(false);
          model=(DefaultTableModel) tab_achat.getModel();
          icon();
    }

    void icon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo1.jpg")));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        recherchedate = new javax.swing.JButton();
        recher = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cat = new javax.swing.JComboBox<>();
        recherchecategorie = new javax.swing.JButton();
        recherche_date_categ = new javax.swing.JButton();
        date_depart = new datechooser.beans.DateChooserCombo();
        date_final = new datechooser.beans.DateChooserCombo();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_achat = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        res = new javax.swing.JLabel();
        supprimer = new javax.swing.JButton();
        apercu = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Z-STock | Gestion d'achat");

        jPanel1.setBackground(new java.awt.Color(37, 204, 247));

        jPanel2.setBackground(new java.awt.Color(37, 204, 247));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("De");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("A");

        recherchedate.setBackground(new java.awt.Color(4, 139, 154));
        recherchedate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        recherchedate.setText("Recherche par date");
        recherchedate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recherchedateActionPerformed(evt);
            }
        });

        recher.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        recher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                recherMousePressed(evt);
            }
        });
        recher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                recherKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Recherche par");

        cat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Numero facture", "Fournisseur" }));

        recherchecategorie.setBackground(new java.awt.Color(4, 139, 154));
        recherchecategorie.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        recherchecategorie.setText("Recherche par Catégorie");
        recherchecategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recherchecategorieActionPerformed(evt);
            }
        });

        recherche_date_categ.setBackground(new java.awt.Color(4, 139, 154));
        recherche_date_categ.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        recherche_date_categ.setText("Recherche par Date/Catégorie");
        recherche_date_categ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recherche_date_categActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(recherchedate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(jLabel4)
                                    .addGap(14, 14, 14)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(recher, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cat, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(recherche_date_categ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(recherchecategorie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(date_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(date_depart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(date_depart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(date_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(recherchedate, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(recher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(recherchecategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(recherche_date_categ, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tab_achat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numéro facture", "Date de recéption", "Montant", "Fournisseur"
            }
        ));
        tab_achat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_achatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tab_achat);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monstock/precedent (1).png"))); // NOI18N
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        res.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        res.setText("0");

        supprimer.setBackground(new java.awt.Color(4, 139, 154));
        supprimer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        apercu.setBackground(new java.awt.Color(4, 139, 154));
        apercu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        apercu.setText("Aperçu");
        apercu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apercuActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Total :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Gestion d'achat");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(416, 416, 416))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(res, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(supprimer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(apercu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supprimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(apercu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res)
                    .addComponent(jLabel5))
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
            this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    private void recherchedateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recherchedateActionPerformed
            while (model.getRowCount()>0)
                    {
                        for(int i=0;i<model.getRowCount();i++)
                        {
                            model.removeRow(0);
                        }
                    }      
        if((date_depart.getSelectedDate().getTime()==null)||(date_final.getSelectedDate().getTime()==null)){
            JOptionPane.showMessageDialog(this, " champs de date est vide ");
            return;
        }else{
          SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
          String date=sdf.format(date_depart.getSelectedDate().getTime());
          String date1=sdf.format(date_final.getSelectedDate().getTime());
          
           while (model.getRowCount()>0)
                    {
                        for(int i=0;i<model.getRowCount();i++)
                        {
                            model.removeRow(0);
                        }
                    }
           String reqaffiche="SELECT num_fac, date_fac, fourni, sum(montant) as mon FROM facture where date_fac BETWEEN'"+date+"' AND '"+date1+"' Group by num_fac";
           try{
            stm=maconx.obtenircnx().createStatement();
            ResultSet res=stm.executeQuery(reqaffiche);
           
            while(res.next())
            {
                 Vector v= new Vector();
                 for(int i=1;i<=model.getColumnCount();i++)
                 {
                  v.add(res.getString("num_fac"));  
                 v.add(res.getString("date_fac"));
                 v.add(res.getString("mon"));
                 v.add(res.getString("fourni"));
            
                 }
               model.addRow(v);
               }  
        }catch(SQLException ex){
              JOptionPane.showMessageDialog(this, ex.getMessage());
        }
           int s=0;
          for(int i=0; i<tab_achat.getRowCount();i++) {
            s+=Integer.parseInt(tab_achat.getValueAt(i,2).toString());  
          }
          res.setText(String.valueOf(s));
        }
    }//GEN-LAST:event_recherchedateActionPerformed

    private void recherchecategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recherchecategorieActionPerformed
        Boolean exit=false;
                while (model.getRowCount()>0)
                    {
                        for(int i=0;i<model.getRowCount();i++)
                        {
                            model.removeRow(0);
                        }
                    }
                        
        if(recher.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Champs à chercher est vide");
            return;
        }
           //debut recherche selon le n° facture
   if(cat.getSelectedItem().equals("Numero facture")){
      
        String querry="Select num_fac, date_fac, fourni, sum(montant)as mon from Facture where num_fac ='"+recher.getText()+"' Group by num_fac  ";
           try{
                stm=maconx.obtenircnx().createStatement();
                ResultSet res=stm.executeQuery(querry);  
                
                 while(res.next()) {
                      exit=true;
                        Vector v= new Vector();
                        for(int i=1;i<=model.getColumnCount();i++)
                        {
                            v.add(res.getString("num_fac"));
                            v.add(res.getString("date_fac"));
                            v.add(res.getString("mon")); 
                             v.add(res.getString("fourni"));
                        }   
                              model.addRow(v);
                  
              }
              
           }
           catch(SQLException ex){
               JOptionPane.showMessageDialog(this,ex.getMessage());
                            }
               
                      }
                     
                //fin de recherche selon n°facture
                
                //debut recherche selon le fournniseur
   if(cat.getSelectedItem().equals("Fournisseur")){
       
             String querry="Select num_fac, date_fac, sum(montant)as mon, fourni from Facture where fourni ='"+recher.getText()+"' Group by num_fac";        
           try{
                stm=maconx.obtenircnx().createStatement();
                ResultSet res=stm.executeQuery(querry);  
                 while(res.next()) {
                      exit=true;
                        Vector v= new Vector();
                    for(int i=1;i<=model.getColumnCount();i++)
                        {
                        v.add(res.getString("num_fac"));
                        v.add(res.getString("date_fac"));
                        v.add(res.getString("mon"));
                             v.add(res.getString("fourni"));
                        }
                 model.addRow(v);
               
                 }
           }catch(SQLException ex){
               JOptionPane.showMessageDialog(this, ex.getMessage());
                            }    
                }
         int s=0;
          for(int i=0; i<tab_achat.getRowCount();i++) {
            s+=Integer.parseInt(tab_achat.getValueAt(i,2).toString());  
          }
          res.setText(String.valueOf(s));
                //fin de recherche selon le  fournisseur
      if( exit==false){
          JOptionPane.showMessageDialog(this, "Vérifier votre recherche...");
          return;
      }
         
    }//GEN-LAST:event_recherchecategorieActionPerformed

    private void recherKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recherKeyPressed
       
    }//GEN-LAST:event_recherKeyPressed

    private void recherMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recherMousePressed
     // TODO add your handling code here:
    }//GEN-LAST:event_recherMousePressed

    private void recherche_date_categActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recherche_date_categActionPerformed
           
             Boolean exit=false;
        while (model.getRowCount()>0)
                    {
                        for(int i=0;i<model.getRowCount();i++)
                        {
                            model.removeRow(0);
                        }
                    }
         if((date_depart.getSelectedDate().getTime()==null)||(date_final.getSelectedDate().getTime()==null)||(recher.getText().trim().equals(""))){
             JOptionPane.showMessageDialog(this," Remplir les champs");
             return;
         }
         else{
             
             
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
         String date=sdf.format(date_depart.getSelectedDate().getTime());
          String date1=sdf.format(date_final.getSelectedDate().getTime()); 
          
           String querry="Select num_fac, date_fac, fourni,  sum(montant)as mon from Facture where fourni ='"+recher.getText()+"' and date_fac BETWEEN'"+date+"' AND '"+date1+"' Group by num_fac ";  
          try{
                stm=maconx.obtenircnx().createStatement();
                ResultSet res=stm.executeQuery(querry);  
                
                 while(res.next()) {
                     exit=true;
                        Vector v= new Vector();
                        for(int i=1;i<=model.getColumnCount();i++)
                        {
                            v.add(res.getString("num_fac"));
                            v.add(res.getString("date_fac"));
                            v.add(res.getString("mon")); 
                             v.add(res.getString("fourni"));
                        }   
                              model.addRow(v);
                  
              }
               
           }
           catch(SQLException ex){
               JOptionPane.showMessageDialog(this,ex.getMessage());
                            }
         }
          int s=0;
          for(int i=0; i<tab_achat.getRowCount();i++) {
            s+=Integer.parseInt(tab_achat.getValueAt(i,2).toString());  
          }
          res.setText(String.valueOf(s));
          
          if(exit==false){
              JOptionPane.showMessageDialog(this, "Vérifier votre recherche");
          }
         
    }//GEN-LAST:event_recherche_date_categActionPerformed

    private void tab_achatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_achatMouseClicked
       
        selectedrow=tab_achat.getSelectedRow();
    }//GEN-LAST:event_tab_achatMouseClicked

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
      
        if(tab_achat.getSelectedRow()==-1){
            
            JOptionPane.showMessageDialog(this,"Voulez vous selectionnée une ligne pour supprimer");
        }
        else{
            String req="delete from facture where num_fac='"+(tab_achat.getValueAt(selectedrow, 0).toString())+"' ";
            try{
                 stm=maconx.obtenircnx().createStatement();
                
                 if  (JOptionPane.showConfirmDialog(this,"voulez-vous supprimer", "Verification!!!!", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION)
                     {
                 stm.executeUpdate(req);
                    model.removeRow(selectedrow);
                     
                     }
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
             int s=0;
          for(int i=0; i<tab_achat.getRowCount();i++) {
            s+=Integer.parseInt(tab_achat.getValueAt(i,2).toString());  
          }
          res.setText(String.valueOf(s));
         
        }
        
    }//GEN-LAST:event_supprimerActionPerformed

    private void apercuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apercuActionPerformed
         Object row[]=new Object [3];
        
        apercuachat frm =new apercuachat();
        
        DefaultTableModel model2 = (DefaultTableModel)frm.jTable1.getModel();
        if(tab_achat.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"Tableau vide rien a imprimer!!!");
            return;
        }
           if((tab_achat.getSelectedRow()==-1)){
                JOptionPane.showMessageDialog(this,"Sélectionné une ligne de facture!!!");
            }
           else{
               
            String req="select * from facture where num_fac='"+tab_achat.getValueAt(selectedrow, 0)+"' ";
           try{
              stm=maconx.obtenircnx().createStatement();
               ResultSet res=stm.executeQuery(req);
           
            while(res.next())
            {
                        frm.nfact.setText(model.getValueAt(selectedrow,0).toString());
                      frm.dt.setText(model.getValueAt(selectedrow,1).toString());
                       frm.fournisseur.setText(model.getValueAt(selectedrow, 3).toString());
                       
                 Vector v= new Vector();
                 for(int i=1;i<=model.getColumnCount();i++)
                 {
                      
                  v.add(res.getString("desg"));
                  v.add(res.getString("prix_ttc"));
                  v.add(res.getString("remise"));
                 v.add(res.getString("qte"));
                 v.add(res.getString("montant"));
                
            
                 }
                 model2.addRow(v);  
               }  
            frm.jTable1.setModel(model2);
            
           } catch(SQLException ex){
               JOptionPane.showMessageDialog(this, ex.getMessage());
           }
       
        int s=0;
       for(int j=0;j<frm.jTable1.getRowCount();j++){
       s+=Integer.parseInt(model2.getValueAt(j, 4).toString());
       frm.res_vente_impriment.setText(String.valueOf(s));
       }
       
        frm.setVisible(true);
        }
    }//GEN-LAST:event_apercuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gestionachat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gestionachat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gestionachat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gestionachat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gestionachat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apercu;
    private javax.swing.JComboBox<String> cat;
    private datechooser.beans.DateChooserCombo date_depart;
    private datechooser.beans.DateChooserCombo date_final;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField recher;
    private javax.swing.JButton recherche_date_categ;
    private javax.swing.JButton recherchecategorie;
    private javax.swing.JButton recherchedate;
    private javax.swing.JLabel res;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable tab_achat;
    // End of variables declaration//GEN-END:variables
}
